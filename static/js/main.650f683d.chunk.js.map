{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["convertDateToString","today","toUTCString","slice","Clock","state","Date","timerId","this","window","setInterval","setState","console","info","prevProps","prevName","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerForNameRandomize","showClock","hideClock","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUA,SAASA,EAAoBC,GAC3B,OAAOA,EAAMC,cAAcC,OAAO,IAAK,GAGlC,IAAMC,EAAb,4MACEC,MAAQ,CACNJ,MAAO,IAAIK,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEV,MAAO,IAAIK,OAE3BG,OAAOG,QAAQC,KAAKb,EAAoB,EAAKK,MAAMJ,UAClD,OAZP,gCAeE,SAAmBa,GACjB,IAAMC,EAAWD,EAAUE,KACnBA,EAASR,KAAKS,MAAdD,KAEJD,IAAaC,GACfP,OAAOG,QAAQM,MAAf,uBAAqCH,EAArC,eAAoDC,MApB1D,kCAwBE,WACEG,cAAcX,KAAKD,WAzBvB,oBA4BE,WACE,IAAQN,EAAUO,KAAKH,MAAfJ,MACAe,EAASR,KAAKS,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGpB,EAAoBC,YAzC/B,GAA2BoB,aCT3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAQX,IAAMG,EAAb,4MACErB,MAAQ,CACNsB,UAAU,EACVC,UAAW,WAHf,EAMEC,sBAAwB,EAN1B,EAuBEC,UAAY,WACV,EAAKnB,SAAS,CAAEgB,UAAU,KAxB9B,EA2BEI,UAAY,SAACC,GACXA,EAAMC,iBAEN,EAAKtB,SAAS,CAAEgB,UAAU,KA9B9B,uDAQE,WAA2B,IAAD,OACxBnB,KAAKqB,sBAAwBpB,OAAOC,aAAY,WAC9C,EAAKC,SAAS,CAAEiB,UAAWN,QAC1B,MAEHY,SAASC,iBAAiB,QAAS3B,KAAKsB,WACxCI,SAASC,iBAAiB,cAAe3B,KAAKuB,aAdlD,kCAiBE,WACEtB,OAAOU,cAAcX,KAAKqB,uBAC1BK,SAASE,oBAAoB,QAAS5B,KAAKsB,WAC3CI,SAASE,oBAAoB,cAAe5B,KAAKuB,aApBrD,oBAiCE,WACE,MAAgCvB,KAAKH,MAA7BsB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECO,GAAY,cAAC,EAAD,CAAOX,KAAMY,WAxClC,GAAyBP,aCbzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.650f683d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nfunction convertDateToString(today: Date): string {\n  return today.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      window.console.info(convertDateToString(this.state.today));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    const prevName = prevProps.name;\n    const { name } = this.props;\n\n    if (prevName !== name) {\n      window.console.debug(`Renamed from ${prevName} to ${name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {convertDateToString(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerForNameRandomize = 0;\n\n  componentDidMount(): void {\n    this.timerForNameRandomize = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', this.showClock);\n    document.addEventListener('contextmenu', this.hideClock);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerForNameRandomize);\n    document.removeEventListener('click', this.showClock);\n    document.removeEventListener('contextmenu', this.hideClock);\n  }\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hideClock = (event: Event) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}